
var HyperledgerPeerIntf = function() {
	const hyperLedgerRESTEndpoint = process.env.HYP_REST_ENDPOINT || "http://127.0.0.1:7050";
	var async = require('async');
	var request = require('request');
	this.restCall = function(uri,completion) {
		var obj;
		async.series( [function (callback) {
				console.log( ' Querying Hyperledger ' ,uri);
				request(hyperLedgerRESTEndpoint+uri, function (error, response, body) {
					if (!error && response.statusCode == 200) {
						//console.log( ' resp ' , body);
						obj = JSON.parse(body)
						callback(null,obj);
					} else {
						console.log(error);
						callback(error);
						throw error;
					}
					
				})
			},
			function(callback) {
				   completion(obj);
				   callback();
			 }
			]
		);
		
	}
}


HyperledgerPeerIntf.prototype.chain = function(callBk) {
	this.restCall('/chain',callBk);
}

HyperledgerPeerIntf.prototype.peers = function(callBk) {
	this.restCall('/network/peers',callBk);
}

HyperledgerPeerIntf.prototype.block = function(blockNum,callBk) {
	this.restCall('/chain/blocks/'+blockNum,callBk);
}


module.exports = new HyperledgerPeerIntf();
