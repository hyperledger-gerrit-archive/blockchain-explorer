extends ../templates/bare

block js
	script(src='/js/0_helper.js' type='text/javascript')
	script(src='/js/rest_peer.js' type='text/javascript')
	script(src='/js/yeti_setup.js' type='text/javascript')
	script.
		var net_doc = !{JSON.stringify(net_doc)};
		console.log('!', net_doc);

block content
	#mainPanel100
		.setupBody
			.setupContent
				// service name
				h1.setuph1 
					span #{lang.setup_title}&nbsp;

				if(network_id)
					#alreadySetupMsg
						h2(style="text-align: center;") #{lang.warning}
						.otherErroMsgWrap
							#warningSetupWrap
								svg#warningSetup
									use(xlink:href="/img/icons/sprite.svg#common--warning")
							br
							p  #{lang.warning_msg}: #{network_id}
							br
							p
								a(href="/#{lang._LANG}/v2/network/#{network_id}")
									button.bx--btn #{lang.go_to_dashboard}
								span &nbsp;&nbsp;
								a(href="#")#doitagain
									button.bx--btn #{lang.setup_again}

				#setupOptionsWrap
					p(style="margin-left:1px;")
						span #{lang.setup_msg1}
						.statusHint &nbsp; #{lang.setup_msg2}
					br

					.centerTxt
						button.helpButtons.bx--btn#walkButton #{lang.walk_button}
					
						button.helpButtons.bx--btn#jsonDumpButton #{lang.dump_button}
							span.buttonHint (#{lang.advanced})
					
					hr.setupBorder
				
				//Quick setup panel
				.stepPanel.walkThrough#quickPanel
					button#clearButton.bx--btn #{lang.clear_all_fields}
					.sideLegend
						span #{lang.quick}
						br
						span #{lang.setup}
						
					.inputWrap
						strong #{lang.first_peer}
						p
							.setupLegend #{lang.network_id} 
							input(type="text" name="quick_network_id" placeholder="Name").doubleInput
						p
							.setupLegend #{lang.http_hostname} 
							input(type="text" name="quick_api_hostname" placeholder="ex 127.0.0.1").doubleInput
						p
							.setupLegend #{lang.http_port} 
							input(type="text" name="quick_api_port" placeholder="ex 443").halfInput
						p
							.setupLegend #{lang.http_tls} 
							button.bx--btn.toggleButtonOn#quickTLSyes #{lang.yes} 
							span &nbsp;
							button.bx--btn.toggleButtonOff#quickTLSno #{lang.no} 
					
					.helpfulHints
						p.centerTxt
							span.hintSetupLegend #{lang.hints}
						.helphint
							strong #{lang.network_id} 
							span - #{lang.net_id_description}
						.helphint
							strong #{lang.http_hostname} 
							span - #{lang.hostname_description}
						.helphint
							strong #{lang.http_port} 
							span - #{lang.port_description}
						.helphint
							strong #{lang.http_tls} 
							span - #{lang.tls_description}
							
					.buttonWrap
						button.bx--btn.nextButton#quickNext #{lang.next}
						pre.statusResults#quickStatusResults

					hr.setupBorder(style="margin-bottom: 0;")
				
				
				//CA setup panel
				.stepPanel.walkThrough#caPanel
					.sideLegend
						span &nbsp;
						
					.inputWrap
						p #{lang.ca_title}
						p
							button.bx--btn.toggleButtonOn#caYes.caExists #{lang.yes} 
							span &nbsp;
							button.bx--btn.toggleButtonOff#caNo.caExists #{lang.no} 
				
					.helpfulHints
						p.centerTxt
							span.hintSetupLegend #{lang.hints}
						.helphint
							strong #{lang.ca} 
							span - #{lang.ca_description}

					.buttonWrap
						button.bx--btn.nextButton#caNext #{lang.next}
					hr.setupBorder(style="margin-bottom: 0;")
				
				
				//Individual Setup Panel
				.stepPanel.walkThrough#setupPanel
					.setupTabNav
						.setupSelBoxWrap(style="display:inline-block;")
							.setupSelBox(number="-1")
								svg.statusIcon(number="-1" style="display:none;")
									use(xlink:href="/img/icons/sprite.svg#common--cancel")
								svg.statusIconValid(number="-1" style="display: inline-block")
									use(xlink:href="/img/icons/sprite.svg#common--healthy")
								span.name #{lang.ca}
						.setupSelBox#addNewPeer
							span.name +
					
					br
				
					.sideLegend
						.setupName #{lang.ca}
						button.bx--btn.sideButton#testPeer #{lang.test}
						button.bx--btn.sideButton#removeSetupPanel #{lang.remove}
						button.bx--btn.sideButton#copyFromLeft #{lang.copy} *
					
					#configWrap
						.inputWrap.setupWrap#setup_-1(style="display: inline-block;")
							p
								.setupLegend #{lang.grpc_hostname}
								input(type="text" name="setup_grpc_hostname_-1" placeholder="ex 127.0.0.1").doubleInput
							p
								.setupLegend #{lang.grpc_port}
								input(type="text" name="setup_grpc_port_-1" placeholder="ex 30303").halfInput

					.helpfulHints
						p.centerTxt
							span.hintSetupLegend #{lang.hints}
						.helphint
							strong #{lang.http_hostname} 
							span - #{lang.hostname_description}
						.helphint
							strong #{lang.http_port} 
							span - #{lang.port_description}
						.helphint
							strong #{lang.http_tls} 
							span - #{lang.tls_description}
						.helphint
							strong #{lang.grpc_hostname} 
							span - #{lang.grpc_description}
						.helphint
							strong #{lang.grpc_port} 
							span - #{lang.grpc_port_description}
						.helphint
							strong #{lang.enroll_id}
							span - #{enroll_description}
						hr
						.helphint
							strong #{lang.test} #{lang.button}
							span - #{lang.test_description}
						.helphint
							strong #{lang.remove} #{lang.button}
							span - #{lang.remove_description}
						.helphint
							strong #{lang.copy} #{lang.button}
							span - #{lang.copy_description}

					.registerPanel
						.sideLegend &nbsp;
						.inputWrap
							p(style="margin-left:0;")
								strong #{lang.register_title}
							p
								.setupLegend #{lang.enroll_id}
								input(type="text" name="setup_enrollID" placeholder="ex bob")

							p
								.setupLegend #{lang.enroll_secret}
								input(type="text" name="setup_enrollSecret" placeholder="ex asdf")
							button.bx--btn.toggleButtonOn#registerEnrollID #{lang.register}

					br

					.buttonWrap
						button.bx--btn.nextButton#setupNext #{lang.next}
						pre.statusResults#setupStatusResults

					hr.setupBorder

				//Session setup panel
				.stepPanel.walkThrough#sessionPanel
					.sideLegend 
						span #{lang.basic} 
						br
						span #{lang.auth}

					.inputWrap
						p
							strong.setupLegend(style="width: initial;") #{lang.basic_auth_title}
						p.statusHint(style="margin-left: 8px;") #{lang.basic_auth_optional}
						p
							.setupLegend #{lang.username} 
							input(type="text" name="basic_username" placeholder="ex admin")
						p
							.setupLegend #{lang.password} 
							input(type="password" name="basic_password" placeholder="ex password")
						p
							.setupLegend #{lang.confirm_password} 
							input(type="password" name="basic_confirm" placeholder="ex password")
				
					.helpfulHints
						p.centerTxt
							span.hintSetupLegend #{lang.hints}
						.helphint
							strong #{lang.basic} #{lang.auth} 
							span - #{lang.basic_auth_description}

					.buttonWrap
						button.bx--btn.nextButton#basicNext #{lang.next}
					hr.setupBorder(style="margin-bottom: 0;")

				//JSON DUMP panel
				form.stepPanel#jsonPanel(action="/#{lang._LANG}/api/network" method="POST")
					.sideLegend
						span JSON
						br
					input(type="hidden" value="test")
					.inputWrap
						p(style="margin-left:0;")
							strong #{lang.setup_final_msg1}:&nbsp;
							span.hintSetupLegend &nbsp;(#{lang.setup_final_msg2})
						p.statusHint #{lang.setup_final_msg3}

						br

						textarea#jsonDump(name="net_doc" placeholder="#{lang.paste_here}") !{JSON.stringify(net_doc, null, 4)}

					br
					br
					
					.buttonWrap
						button.bx--btn.nextButton#jsonDumpNext(type="submit") #{lang.submit}

				div(style="height: 500px;")